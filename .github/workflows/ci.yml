name: CI

permissions:
  contents: write
  pull-requests: write

on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20.x"

      - name: Set go cache paths
        id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3

      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Install tools
        run: make install-tools

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Build
        run: GOFLAGS=-v make build

      - name: Lint
        run: make lint

      - name: Start Redis
        uses: supercharge/redis-github-action@1.5.0
        with:
          redis-version: 6.2.6

      - name: Test
        env:
          APP_ENV: test
          REDIS_INHOOKS_DB_NAME: test
          HOST: localhost
          PORT: 3001
          REDIS_URL: "redis://localhost:6379"
        run: GOFLAGS=-v make test-coverage

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: goveralls -coverprofile=coverprofile.txt -service=github

  release-please:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          command: manifest
          release-type: go

  release:
    runs-on: ubuntu-latest
    needs: [build, release-please]
    if: needs.release-please.outputs.release_created
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Set go cache paths
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
